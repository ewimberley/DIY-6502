Opcode	Hex	Params	Addr Mode	Description

;ADC
ADC	61	i+x	zp	Add value from zerop+X address
ADC	65	zp	zp	Add value at zp address
ADC	69	v	#	Add value to A register
ADC	6D	a	a	Add value at address
ADC	71	i,y	zp	Load zp address, add y, then add value at result addr

;AND
AND	21	i+x	zp	AND value from zerop+X addr
AND	25	zp	zp	AND value at zp addr
AND	29	v	#	AND value with A register
AND	2D	a	a	AND value at addr
AND	31	i,y	zp	Load zp address, add y, then add value at result addr
;ORA
ORA	01	i+x	zp	OR value from zerop+X address
ORA	09	v	#	OR value with A register
ORA	11	i,y	zp	Load zp address, add y to that, then OR value at that addr
;EOR
EOR	49	v	#	XOR value with A register
;ROL
;ROR
;ASL
ASL	0A	n	#	Shift A register left
;LSR
LSR	4A	n	n	Shift A register right
;BIT
BIT	24	zp	zp	????

;Branch
BPL	10	l	r	Jump to label if plus result
BMI	30	l	r	Jump to label if minus result
BVC	50	l	r	Jump to label on overflow clear
BVS	70	l	r	Jump to label on overflow set
BCC	90	l	r	Jump to label on carry clear
BCS	B0	l	r	Jump to label on carry set
BNE	D0	l	r	Jump to label if Z flag is 0
BEQ	F0	l	r	Jump to label if Z flag is 1

;CMP
CMP	C9	v	#	Compare value to A register
;CPX
CPX	E0	v	#	Compare X with value, Z=1 if equal
;CPY
CPY	C0	v	#	Compare Y to value

;Flags
CLC	18	n	#	Clear carry
SEC	38	n	#	Set carry
CLI	58	n	#	Clear interrupt
SEI	78	n	#	Set interrupt
CLV	B8	n	#	Clear overflow
CLD	D8	n	#	Clear decimal
SED	F8	n	#	Set decimal

;INC
;DEC

;JMP
JMP	4C	l	a	Jump to label
JMP	6C	i	a	Jump to the address at the argument address.
;JSR
JSR	20	l	a	Jump to subroutine (at label)

;LDA
LDA	A1	i+x	zp	Load value from zerop+X register address into Y
LDA	A5	zp	zp	Load value at zerop into A
LDA	A9	v	#	Load value into A
LDA	B1	i,y	zp	Load address from zerop, add y to it, then load that addr into A
;LDX
LDX	A2	v	#	Load value into X
LDX	A6	zp	zp	Load value at zerop into X
;LDY
LDY	A0	v	#	Load value into Y
LDY	A4	zp	zp	Load value at zerop into Y

;Registers
DEY	88	n	i	Decrement Y
TXA	8A	n	i	Transfer X to A
TYA	98	n	i	Transfer Y to A
TAY	A8	n	i	Transfer A to Y
TAX	AA	n	i	Transfer A to X
INY	C8	n	i	Increment Y
DEX	CA	n	i	Decrement X
INX	E8	n	i	Increment X

;RTI
RTI	40	n	s	Return from interrupt
;RTS
RTS	60	n	s	Return from subroutine

;SBC
SBC	E9	v	#	Subtract value from A

;STA
STA	85	zp	zp	Store zeropage address to A register
STA	99	a,y	a	Store A in address+Y
STA	8D	a	a	Store A at address
;STX
STX	8E	a	a	Store X at address
;STY
STY	8C	a	a	Store Y at address

;Stack
PHA	48	n	s	Push A to stack ($0100-$01FF, starting from FF)
PHP	08	n	s	Push status to the stack
PLP	28	n	s	Pull status from stack
PLA	68	n	s	Pull off stack to A

;Misc
BRK	00	n	s	Halt
NOP	EA	n	i	No operation
